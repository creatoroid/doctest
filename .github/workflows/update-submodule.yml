# name: Update Submodule
# on:
#   push:
#     branches:
#       - main 

# jobs:
#   update-submodule:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code repository
#         uses: actions/checkout@v3
#         with:
#           repository: 'creatoroid/test'
#           token: ${{ secrets.GITHUB_TOKEN }}
#           path: 'test'

#       - name: Update submodule reference to latest commit from docs
#         run: |
#           cd test
#           git submodule update --init --recursive
#           git submodule set-branch --branch main doctest
#           git submodule update --remote
#           git config user.email 'github-actions[bot]@users.noreply.github.com'
#           git config user.name 'github-actions[bot]'
#           git add docs 
#           git commit -m "Update doctest submodule to latest commit"
#           git push
#         env:
#           ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}


# name: Update Submodule

# on: [push, pull_request]

# jobs:
#   update:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code repository 
#         uses: actions/checkout@v2
#         with:
#           repository: 'creatoroid/test'
#           token: ${{ secrets.GITHUB_TOKEN }}

#       - name: Fetch all git history
#         run: git fetch --prune --unshallow

#       - name: Update submodule reference
#         run: |
#           cd docs
#           git pull origin main
#           cd ..
#           git config --global user.email 'github-actions[bot]@users.noreply.github.com'
#           git config --global user.name 'github-actions[bot]'
#           git commit -am "Update docs submodule reference to latest commit"
#           git push

#       - name: Create Pull Request
#         uses: peter-evans/create-pull-request@v3
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           title: "Update docs submodule reference"
#           body: "This PR updates the docs submodule reference to the latest commit."
#           branch: "update-docs-submodule"


# Simple workflow for deploying static content to GitHub Pages and update submodule
name: Deploy and Update

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  # Hosted GitHub runners have 7 GB of memory available, let's use 6 GB
  NODE_OPTIONS: --max-old-space-size=6144

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile --non-interactive
      - name: Build
        run: yarn build
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: build
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  update:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository 
        uses: actions/checkout@v2
        with:
          repository: 'creatoroid/test'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update submodule reference
        run: |
          cd test/docs
          git fetch
          git checkout main
          cd ..
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global user.name 'github-actions[bot]'
          git commit -am "Update docs submodule reference to latest commit"
          git push

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Update docs submodule reference"
          body: "This PR updates the docs submodule reference to the latest commit."
          branch: "update-docs-submodule"